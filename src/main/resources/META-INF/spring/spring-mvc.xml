<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context" xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:util="http://www.springframework.org/schema/util" xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
    <context:property-placeholder location="classpath*:/META-INF/spring/*.properties" />
    <mvc:annotation-driven>
        <mvc:message-converters register-defaults="true">
            <!-- <bean class="org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter" /> -->
            <bean class="org.springframework.http.converter.xml.Jaxb2CollectionHttpMessageConverter" />
            <!-- <bean class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter"> -->
            <!-- <constructor-arg index="0"> -->
            <!-- <bean class="org.springframework.oxm.castor.CastorMarshaller"> <property name="mappingLocations" value="classpath:META-INF/castor/*.xml" 
                /> </bean> -->
            <!-- <bean class="org.springframework.oxm.jaxb.Jaxb2Marshaller"> <property name="packagesToScan" value="org.terasoluna.gfw.examples" 
                /> </bean> -->
            <!-- <bean class="org.springframework.oxm.xstream.XStreamMarshaller"> <property name="annotatedClasses" value="org.terasoluna.gfw.examples.ajax.app.SimpleResource" 
                /> </bean> -->
            <!-- <bean class="org.springframework.oxm.xmlbeans.XmlBeansMarshaller"> </bean> -->
            <!-- <bean class="org.springframework.oxm.jibx.JibxMarshaller"> <property name="targetPackage" value="org.terasoluna.gfw.examples.ajax.app" 
                /> </bean> -->
            <!-- </constructor-arg> -->
            <!-- <property name="supportedMediaTypes" value="application/xml" /> -->
            <!-- </bean> -->
        </mvc:message-converters>
        <mvc:argument-resolvers>
            <bean class="org.springframework.data.web.PageableHandlerMethodArgumentResolver">
                <property name="fallbackPageable">
                    <bean class="org.springframework.data.domain.PageRequest">
                        <constructor-arg index="0" value="0" />
                        <constructor-arg index="1" value="10" />
                    </bean>
                </property>
                <property name="maxPageSize" value="100" />
            </bean>
            <bean class="org.terasoluna.gfw.web.token.transaction.TransactionTokenContextHandlerMethodArgumentResolver" />
        </mvc:argument-resolvers>
    </mvc:annotation-driven>
    <mvc:default-servlet-handler />
    
    <mvc:view-controller path="/" view-name="index" />

    <context:component-scan base-package="org.terasoluna.gfw.*.*.app" />
    <mvc:resources mapping="/resources/**" location="/resources/,classpath:META-INF/resources/"
        cache-period="#{60 * 60}" />
    <mvc:resources mapping="/download/tmp/**" location="file:${app.upload.tmpDir}" cache-period="#{60 * 60}" />
    <mvc:resources mapping="/download/**" location="file:${app.upload.saveDir}" cache-period="#{60 * 60}" />
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**" />
            <mvc:exclude-mapping path="/resources/**" />
            <mvc:exclude-mapping path="/download/**" />
            <mvc:exclude-mapping path="/**/*.html" />
            <bean class="org.terasoluna.gfw.web.logging.TraceLoggingInterceptor" />
        </mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/**" />
            <mvc:exclude-mapping path="/resources/**" />
            <mvc:exclude-mapping path="/download/**" />
            <mvc:exclude-mapping path="/**/*.html" />
            <bean class="org.terasoluna.gfw.web.token.transaction.TransactionTokenInterceptor" />
        </mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/**" />
            <mvc:exclude-mapping path="/resources/**" />
            <mvc:exclude-mapping path="/download/**" />
            <mvc:exclude-mapping path="/**/*.html" />
            <bean class="org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor" />
        </mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/**" />
            <mvc:exclude-mapping path="/resources/**" />
            <mvc:exclude-mapping path="/download/**" />
            <mvc:exclude-mapping path="/**/*.html" />
            <bean class="org.terasoluna.gfw.web.codelist.CodeListInterceptor" />
        </mvc:interceptor>
    </mvc:interceptors>
    <bean id="multipartResolver" class="org.springframework.web.multipart.support.StandardServletMultipartResolver" />
    <!-- Settings View Resolver. -->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/" />
        <property name="suffix" value=".jsp" />
    </bean>
    <bean id="requestDataValueProcessor" class="org.terasoluna.gfw.web.mvc.support.CompositeRequestDataValueProcessor">
        <constructor-arg>
            <util:list>
                <bean class="org.springframework.security.web.servlet.support.csrf.CsrfRequestDataValueProcessor"
                    factory-method="create" />
                <bean class="org.terasoluna.gfw.web.token.transaction.TransactionTokenRequestDataValueProcessor" />
            </util:list>
        </constructor-arg>
    </bean>
    <!-- Setting Exception Handling. -->
    <!-- Exception Resolver. -->
    <bean class="org.terasoluna.gfw.web.exception.SystemExceptionResolver">
        <property name="exceptionCodeResolver" ref="exceptionCodeResolver" />
        <!-- Setting and Customization by project. -->
        <property name="order" value="3" />
        <property name="exceptionMappings">
            <map>
                <entry key="ResourceNotFoundException" value="common/error/resourceNotFoundError" />
                <entry key="BusinessException" value="common/error/businessError" />
                <entry key="InvalidTransactionTokenException" value="common/error/transactionTokenError" />
                <entry key=".DataAccessException" value="common/error/dataAccessError" />
            </map>
        </property>
        <property name="statusCodes">
            <map>
                <entry key="common/error/resourceNotFoundError" value="404" />
                <entry key="common/error/businessError" value="409" />
                <entry key="common/error/transactionTokenError" value="409" />
                <entry key="common/error/dataAccessError" value="500" />
            </map>
        </property>
        <property name="defaultErrorView" value="common/error/systemError" />
        <property name="defaultStatusCode" value="500" />
    </bean>
    <!-- Setting AOP. -->
    <bean id="handlerExceptionResolverLoggingInterceptor" class="org.terasoluna.gfw.web.exception.HandlerExceptionResolverLoggingInterceptor">
        <property name="exceptionLogger" ref="exceptionLogger" />
    </bean>
    <aop:config>
        <aop:advisor advice-ref="handlerExceptionResolverLoggingInterceptor"
            pointcut="execution(* org.springframework.web.servlet.HandlerExceptionResolver.resolveException(..))" />
    </aop:config>
</beans>