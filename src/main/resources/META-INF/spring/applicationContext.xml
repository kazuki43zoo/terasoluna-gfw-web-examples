<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context" xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:task="http://www.springframework.org/schema/task"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">

    <context:component-scan base-package="org.terasoluna.gfw.examples.*.common" />

    <import resource="classpath:/META-INF/spring/projectName-domain.xml" />

    <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />

    <context:property-placeholder location="classpath*:/META-INF/spring/*.properties" />

    <bean class="org.dozer.spring.DozerBeanMapperFactoryBean">
        <property name="mappingFiles" value="classpath*:/META-INF/dozer/**/*-mapping.xml" />
    </bean>

    <!-- Message -->
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <value>i18n/application-messages</value>
            </list>
        </property>
    </bean>

    <!-- Exception Code Resolver. -->
    <bean id="exceptionCodeResolver" class="org.terasoluna.gfw.common.exception.SimpleMappingExceptionCodeResolver">
        <!-- Setting and Customization by project. -->
        <property name="exceptionMappings">
            <map>
                <entry key="JsonParseException" value="e.ex.fw.5501" />
                <entry key="UnrecognizedPropertyException" value="e.ex.fw.5502" />
                <entry key="JsonMappingException" value="e.ex.fw.5503" />
                <entry key="HttpRequestMethodNotSupportedException" value="e.ex.fw.5004" />
                <entry key="MediaTypeNotAcceptableException" value="e.ex.fw.5005" />
                <entry key="HttpMediaTypeNotSupportedException" value="e.ex.fw.5006" />
                <entry key="ResourceNotFoundException" value="e.ex.fw.6001" />
                <entry key="BusinessException" value="e.ex.fw.8001" />
            </map>
        </property>
        <property name="defaultExceptionCode" value="e.ex.fw.9001" />
    </bean>

    <!-- Exception Logger. -->
    <bean id="exceptionLogger" class="org.terasoluna.gfw.common.exception.ExceptionLogger">
        <property name="exceptionCodeResolver" ref="exceptionCodeResolver" />
    </bean>

    <!-- Filter. -->
    <bean id="exceptionLoggingFilter" class="org.terasoluna.gfw.web.exception.ExceptionLoggingFilter">
        <property name="exceptionLogger" ref="exceptionLogger" />
    </bean>

    <task:scheduler id="fileCleanupTaskScheduler" />
    <task:scheduled-tasks scheduler="fileCleanupTaskScheduler">
        <task:scheduled ref="uploadTmpFileCleaner" method="cleanup" cron="${app.upload.tmpFileCleaner.cron}" />
    </task:scheduled-tasks>

    <bean id="uploadTmpFileCleaner" class="org.terasoluna.gfw.examples.upload.common.FileCleaner">
        <property name="targetDirectory" value="${app.upload.tmpDir}" />
    </bean>

</beans>
